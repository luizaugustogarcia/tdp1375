package br.unb.cic.tdp1375.audit;

import java.io.BufferedReader;
import java.io.FileReader;

import com.google.common.base.Throwables;

import br.unb.cic.tdp1375.EliasHartman1375;
import br.unb.cic.tdp1375.permutations.Cycle;

/**
 *
 * @author LuizAugusto
 */
public class FileSystemAudit {

	public static void main(String[] args) {

		// File generated by GRAAu's generator available in
		// http://mirza.ic.unicamp.br:8080/bioinfo/index.jsf
		try (BufferedReader br = new BufferedReader(new FileReader("/home/luiz/git/unb/Doutorado/allPermutations/allPermutations_8bytes_version/exact10.txt"), 10000000)) {
			String line = null;

			while ((line = br.readLine()) != null) {
				String[] split = line.split(" ");

				Cycle pi = new Cycle("0," + split[0]);
				try {
					float d = EliasHartman1375.sort(pi);
					float e = Integer.parseInt(split[1]);
					float ratio = d / e;
					if (ratio < 1 || ratio > 1.375) {
						System.out.printf("\n%s->%d-%d-%.2f", split[0], (int) d, (int) e, ratio);
					}
				} catch (Exception e) {
					Throwables.propagate(e);
					System.out.println("Error when sorting " + pi.toString());
				}
			}
		} catch (Exception ex) {
			Throwables.propagate(ex);
		}
	}
}
